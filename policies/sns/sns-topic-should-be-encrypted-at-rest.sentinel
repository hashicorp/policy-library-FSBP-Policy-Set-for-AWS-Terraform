# This policy requires resources of type `aws_sns_topic` to be encrypted at rest.

# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: BUSL-1.1

# Imports

import "tfplan/v2" as tfplan
import "tfresources" as tf
import "report" as report
import "collection" as collection
import "collection/maps" as maps

# Constants

const = {
	"policy_name":            "sns-topic-should-be-encrypted-at-rest",
	"message":                "SNS topics should be encrypted at rest. Refer to https://docs.aws.amazon.com/securityhub/latest/userguide/sns-controls.html#sns-1 for more details.",
	"resource_aws_sns_topic": "aws_sns_topic",
}

# Functions

get_violations = func(resources) {
	return collection.reject(resources, func(res) {
		return maps.get(res, "values.kms_master_key_id", null) is not null
	})
}

# Variables

aws_sns_topics = tf.plan(tfplan.planned_values.resources).type(const.resource_aws_sns_topic).resources
violations = get_violations(aws_sns_topics)

summary = {
	"policy_name": const.policy_name,
	"violations": map violations as _, v {
		{
			"address":        v.address,
			"module_address": v.module_address,
			"message":        const.message,
		}
	},
}

# Outputs

print(report.generate_policy_report(summary))

# Rules

main = rule {
	violations is empty
}
